<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width/2;
y = room_height/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(vk_left) {
    x -= 1;
}
if keyboard_check(vk_right) {
    x += 1;
}

if keyboard_check(vk_up) {
    y -= 1;
}

if keyboard_check(vk_down) {
    y += 1;
}

if keyboard_check_released(vk_escape){
    obj_player.sprite_index = spr_player;
}

//if !place_free(x,y) {
if keyboard_check_released(vk_space){
    custom_sprite = sprite_create_from_surface  (application_surface
                                                , x,y //x-16,y-16
                                                , 32, 32
                                                , false,false
                                                , 0,0 );//16, 16);
                                                
    obj_player.sprite_index = custom_sprite;
    //obj_player.image_xscale = 0.5;
    //obj_player.image_yscale = 0.5;    
}

if keyboard_check_released(vk_f12) {
    surf = surface_create(32, 32);
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    //draw_sprite(custom_sprite, 0, 0, 0);
    draw_sprite(spr_player, 0, 0, 0);
    draw_sprite(spr_test, 0, 0, 0);
    spr_custom = sprite_create_from_surface(surf
        , 0, 0
        , 32, 32
        , false
        , false
        , 0, 0);
    obj_player.sprite_index = spr_custom;
    
    surface_reset_target();
    surface_free(surf);    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
